---
services:
  postgres:
    image: postgres:17
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: flask
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/pg-password
    secrets:
      - pg-password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - private

  nginx:
    image: jonasal/nginx-certbot:5.2.1-nginx1.27.0
    restart: always
    ports:
      - 80:80
      - 443:443
    env_file:
      - ./.nginx
    configs:
      - source: nginx-config
        target: /etc/nginx/user_conf.d/nginx.conf
    networks:
      - public
    volumes:
      - nginx-secrets:/etc/letsencrypt
    depends_on:
      flask:
        condition: service_healthy
        restart: true

  flask:
    image: scottishwidow/flask:latest
    restart: always
    build:
      context: flask
      dockerfile: Dockerfile
    ports:
      - 7070:5000
    secrets:
      - secret-1
      - pg-password
    environment:
      - ENV_VALUE=${ENV_VALUE}
      - ENV_TOKEN=${ENV_TOKEN}
      - FLASK_DEBUG=1
      - FLASK_APP=./app.py
      - DB_HOST=postgres
      - DB_DATABASE=postgres
      - DB_USER=flask
    volumes:
      # ./flask/data:/data
      - flask-data:/data
      # - ./flask:/app
    networks:
      - private
      - public
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/healthz"]
      interval: 5s
      retries: 5
      start_period: 15s
      timeout: 5s
secrets:
  secret-1:
    file: ./secrets/secret-1
  pg-password:
    file: ./secrets/pg-password

volumes:
  flask-data:
  postgres-data:
  nginx-secrets:

configs:
  nginx-config:
    file: ./nginx.conf

networks:
  public:
  private:
    driver: bridge
    ipam:
      config:
        - subnet: "10.0.0.0/24"
          gateway: "10.0.0.1"
